{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Downloads/space-bot/Character Archivist System (CAS) 203d3716a10c808881d7cd398257b04d/relationship_therapist_system/MirrorCore_UI_Integration_Files/react-app/src/components/mirrorcore/MirrorCoreChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MirrorCoreChatBot = ({\n  userId,\n  sessionId,\n  onSessionChange\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [currentSession, setCurrentSession] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Fetch session data on component mount or when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchSession(sessionId);\n      fetchMessages(sessionId);\n    }\n  }, [sessionId]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const fetchSession = async sid => {\n    try {\n      const response = await fetch(`/api/mirrorcore/session/${sid}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCurrentSession(data);\n      }\n    } catch (error) {\n      console.error('Error fetching session:', error);\n    }\n  };\n  const fetchMessages = async sid => {\n    // In a real implementation, this would fetch messages from the backend\n    // For now, we'll simulate with empty messages array\n    setMessages([]);\n  };\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      text: inputText,\n      sender: 'client',\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setLoading(true);\n    try {\n      // Send message to backend\n      const response = await fetch('/api/mirrorcore/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          user_id: userId,\n          session_id: sessionId || null\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n\n        // Add bot response to chat\n        const botMessage = {\n          text: data.message,\n          sender: 'diego',\n          timestamp: new Date().toISOString(),\n          fmt_id: data.fmt_id,\n          fmt_name: data.fmt_name,\n          stage: data.stage,\n          tone: data.tone\n        };\n        setMessages(prev => [...prev, botMessage]);\n\n        // If this is a new session, update the sessionId\n        if (!sessionId) {\n          onSessionChange && onSessionChange(data.session_id);\n        }\n\n        // Update session data\n        fetchSession(sessionId || data.session_id);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Add error message\n      setMessages(prev => [...prev, {\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        sender: 'system',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mirrorcore-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mirrorcore-chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mirrorcore-chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Diego Camilleri\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), currentSession && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mirrorcore-stage-badge\",\n          children: currentSession.stage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), currentSession && currentSession.scores && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mirrorcore-scores\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mirrorcore-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Trust:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mirrorcore-score-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mirrorcore-score-fill\",\n              style: {\n                width: `${Math.min(100, Math.max(0, currentSession.scores.trust))}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mirrorcore-score\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Openness:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mirrorcore-score-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mirrorcore-score-fill\",\n              style: {\n                width: `${Math.min(100, Math.max(0, currentSession.scores.open))}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mirrorcore-messages-container\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mirrorcore-empty-chat\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start a conversation with Diego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mirrorcore-message ${msg.sender === 'client' ? 'mirrorcore-user-message' : 'mirrorcore-bot-message'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mirrorcore-message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mirrorcore-message-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mirrorcore-message-time\",\n              children: formatTimestamp(msg.timestamp)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), msg.fmt_name && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mirrorcore-message-fmt\",\n              children: msg.fmt_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mirrorcore-message mirrorcore-bot-message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mirrorcore-message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mirrorcore-typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mirrorcore-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"mirrorcore-input\",\n        value: inputText,\n        onChange: e => setInputText(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message...\",\n        rows: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mirrorcore-send-button\",\n        onClick: handleSendMessage,\n        disabled: loading || !inputText.trim(),\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          viewBox: \"0 0 24 24\",\n          width: \"24\",\n          height: \"24\",\n          stroke: \"currentColor\",\n          strokeWidth: \"2\",\n          fill: \"none\",\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: \"22\",\n            y1: \"2\",\n            x2: \"11\",\n            y2: \"13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: \"22 2 15 22 11 13 2 9 22 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(MirrorCoreChatBot, \"Mw6Rpg3Pv+njPDFazyalft3G8yA=\");\n_c = MirrorCoreChatBot;\nexport default MirrorCoreChatBot;\nvar _c;\n$RefreshReg$(_c, \"MirrorCoreChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MirrorCoreChatBot","userId","sessionId","onSessionChange","_s","messages","setMessages","inputText","setInputText","loading","setLoading","currentSession","setCurrentSession","messagesEndRef","fetchSession","fetchMessages","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sid","response","fetch","ok","data","json","error","console","handleSendMessage","trim","userMessage","text","sender","timestamp","Date","toISOString","prev","method","headers","body","JSON","stringify","message","user_id","session_id","botMessage","fmt_id","fmt_name","stage","tone","handleKeyPress","e","key","shiftKey","preventDefault","formatTimestamp","date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","scores","style","width","Math","min","max","trust","open","length","map","msg","index","ref","value","onChange","target","onKeyPress","placeholder","rows","onClick","disabled","viewBox","height","stroke","strokeWidth","fill","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","points","_c","$RefreshReg$"],"sources":["/Users/macbook/Downloads/space-bot/Character Archivist System (CAS) 203d3716a10c808881d7cd398257b04d/relationship_therapist_system/MirrorCore_UI_Integration_Files/react-app/src/components/mirrorcore/MirrorCoreChatBot.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst MirrorCoreChatBot = ({ userId, sessionId, onSessionChange }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [currentSession, setCurrentSession] = useState(null);\n  const messagesEndRef = useRef(null);\n\n  // Fetch session data on component mount or when sessionId changes\n  useEffect(() => {\n    if (sessionId) {\n      fetchSession(sessionId);\n      fetchMessages(sessionId);\n    }\n  }, [sessionId]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const fetchSession = async (sid) => {\n    try {\n      const response = await fetch(`/api/mirrorcore/session/${sid}`);\n      if (response.ok) {\n        const data = await response.json();\n        setCurrentSession(data);\n      }\n    } catch (error) {\n      console.error('Error fetching session:', error);\n    }\n  };\n\n  const fetchMessages = async (sid) => {\n    // In a real implementation, this would fetch messages from the backend\n    // For now, we'll simulate with empty messages array\n    setMessages([]);\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputText.trim()) return;\n\n    // Add user message to chat\n    const userMessage = {\n      text: inputText,\n      sender: 'client',\n      timestamp: new Date().toISOString()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setLoading(true);\n\n    try {\n      // Send message to backend\n      const response = await fetch('/api/mirrorcore/message', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMessage,\n          user_id: userId,\n          session_id: sessionId || null\n        })\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        \n        // Add bot response to chat\n        const botMessage = {\n          text: data.message,\n          sender: 'diego',\n          timestamp: new Date().toISOString(),\n          fmt_id: data.fmt_id,\n          fmt_name: data.fmt_name,\n          stage: data.stage,\n          tone: data.tone\n        };\n\n        setMessages(prev => [...prev, botMessage]);\n        \n        // If this is a new session, update the sessionId\n        if (!sessionId) {\n          onSessionChange && onSessionChange(data.session_id);\n        }\n\n        // Update session data\n        fetchSession(sessionId || data.session_id);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      // Add error message\n      setMessages(prev => [...prev, {\n        text: 'Sorry, there was an error processing your message. Please try again.',\n        sender: 'system',\n        timestamp: new Date().toISOString()\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"mirrorcore-chat-container\">\n      {/* Chat header */}\n      <div className=\"mirrorcore-chat-header\">\n        <div className=\"mirrorcore-chat-title\">\n          <h2>Diego Camilleri</h2>\n          {currentSession && (\n            <div className=\"mirrorcore-stage-badge\">\n              {currentSession.stage}\n            </div>\n          )}\n        </div>\n        {currentSession && currentSession.scores && (\n          <div className=\"mirrorcore-scores\">\n            <div className=\"mirrorcore-score\">\n              <span>Trust:</span>\n              <div className=\"mirrorcore-score-bar\">\n                <div \n                  className=\"mirrorcore-score-fill\" \n                  style={{ width: `${Math.min(100, Math.max(0, currentSession.scores.trust))}%` }}\n                ></div>\n              </div>\n            </div>\n            <div className=\"mirrorcore-score\">\n              <span>Openness:</span>\n              <div className=\"mirrorcore-score-bar\">\n                <div \n                  className=\"mirrorcore-score-fill\" \n                  style={{ width: `${Math.min(100, Math.max(0, currentSession.scores.open))}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Messages area */}\n      <div className=\"mirrorcore-messages-container\">\n        {messages.length === 0 ? (\n          <div className=\"mirrorcore-empty-chat\">\n            <p>Start a conversation with Diego</p>\n          </div>\n        ) : (\n          messages.map((msg, index) => (\n            <div \n              key={index} \n              className={`mirrorcore-message ${msg.sender === 'client' ? 'mirrorcore-user-message' : 'mirrorcore-bot-message'}`}\n            >\n              <div className=\"mirrorcore-message-content\">\n                <p>{msg.text}</p>\n                <div className=\"mirrorcore-message-meta\">\n                  <span className=\"mirrorcore-message-time\">{formatTimestamp(msg.timestamp)}</span>\n                  {msg.fmt_name && (\n                    <span className=\"mirrorcore-message-fmt\">{msg.fmt_name}</span>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        {loading && (\n          <div className=\"mirrorcore-message mirrorcore-bot-message\">\n            <div className=\"mirrorcore-message-content\">\n              <div className=\"mirrorcore-typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          </div>\n        )}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Input area */}\n      <div className=\"mirrorcore-input-container\">\n        <textarea\n          className=\"mirrorcore-input\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type your message...\"\n          rows={1}\n        />\n        <button \n          className=\"mirrorcore-send-button\" \n          onClick={handleSendMessage}\n          disabled={loading || !inputText.trim()}\n        >\n          <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n            <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MirrorCoreChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}